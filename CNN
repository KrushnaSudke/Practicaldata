from keras.models import Sequential
from keras.layers import Dense, Input, Conv2D, MaxPool2D, Flatten
from keras.utils import to_categorical
from keras.utils import plot_model

from keras.datasets import cifar10
(x_train, y_train), (x_test, y_test) = cifar10.load_data()

x_train.shape
x_test.shape
import matplotlib.pyplot as plt

plt.figure(figsize=(2,2))
plt.imshow(x_train[100])

x_train[100].shape
y_train

labels = ['Airplane','Automobile','Bird','Cat','Deer','Dog','Frog','Horse','Ship','Truck']

plt.figure(figsize=(30,30))
for i in range(25):
    plt.subplot(5,5,i+1)
    plt.xticks([])
    plt.yticks([])
    plt.title(labels[y_train[i][0]])
    plt.imshow(x_train[i])

y_train.shape

y_train = y_train.flatten()
y_test = y_test.flatten()

y_train

y_test

y_train_new = to_categorical(y_train)
y_test_new = to_categorical(y_test)

y_train_new.shape

y_train_new

model = Sequential()

model.add(Input((32,32,3)))
model.add(Conv2D(32, kernel_size=(5,5), activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))

model.add(Conv2D(16, kernel_size=(3,3), activation='relu'))
model.add(MaxPool2D(pool_size=(2,2)))

model.add(Flatten())
model.add(Dense(256, activation='relu'))
model.add(Dense(10, activation='softmax'))

model.summary()

plot_model(model, show_layer_activation=True, show_layer_names=True,
           show_shapes=True)

model.compile(loss = 'categorical_crossentropy', optimizer='adam',
              metrics=['accuracy'])

model.fit(x_train, y_train_new, epochs=10, batch_size=10)

model.evaluate(x_test, y_test_new, batch_size=1)

